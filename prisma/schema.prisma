// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Auth {
  id        Int      @id @default(autoincrement())
  provider  Provider
  oAuthId   String   @unique @map("o_auth_id")
  userId    Int      @map("user_id")
  createdAt DateTime @default(now()) @map("created_at")
  user      User     @relation(fields: [userId], references: [id])

  @@map("auth")
}

model User {
  id              Int        @id @default(autoincrement())
  name            String
  profileImageUrl String     @map("profile_image_url")
  email           String?
  bio             String?
  birthday        DateTime?
  gender          Gender?
  status          UserStatus @default(ACTIVATE)
  createdAt       DateTime   @default(now()) @map("created_at")
  updatedAt       DateTime   @updatedAt @map("updated_at")
  authInfo        Auth[]

  @@map("user")
}

model UserLog {
  id          Int              @id @default(autoincrement())
  userId      String
  target      UserUpdateTarget
  description String?          @db.VarChar(2000)
  updatedBy   Int?             @map("updated_by")
  createdAt   DateTime         @default(now()) @map("created_at")

  @@map("user_log")
}

model RefreshToken {
  id        Int      @id @default(autoincrement())
  userId    Int      @map("user_id")
  isUsed    Boolean  @default(false) @map("is_used")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("refresh_token")
}

enum Provider {
  GOOGLE
  APPLE
}

enum UserStatus {
  ACTIVATE
  BLOCK
  DORMANT
  WITHDRAWAL
}

enum UserUpdateTarget {
  PROFILE
  STATUS
}

enum Gender {
  DIVERSE
  FEMALE
  MALE
}
